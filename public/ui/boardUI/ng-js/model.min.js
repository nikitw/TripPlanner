var models=angular.module("TripPlanner.models",[]);models.factory("$users",function(){var b=function(c,e,d){this.name=c;this.username=e;this.apiKey=d;this.password=null;this.cPassword=null};var a={};a.getUser=function(c){if(c){return new b(c.name,c.username,c.apiKey,c.trips)}else{return new b(null,null,null)}};a.formUser=function(){var c=new b();c.dob=undefined;c.address=[{add1:null,add2:null,city:null,state:null,zip:null}];c.phone=undefined;return c};a.validate=function(c){if(c){if(c.name&&c.password&&c.dob&&c.cPassword&&c.username&&c.address[0].zip&&c.address[0].city&&c.address[0].state){if(!/^[A-Za-z]{1}[A-Za-z0-9\.\-_]*[A-Za-z0-9]+\@[A-Za-z]{2}[A-Za-z0-9\.]*\.[A-Za-z]{3,5}$/.test(c.username)||/(\.){2,}/.test(c.username)){throw new Error("Invalid username, it should be a valid email address")}if(!/(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/.test(c.password)){throw new Error("Passwords must contain at least six characters, including uppercase, lowercase letters and numbers")}if(c.password!=c.cPassword){throw new Error("Passwords did not match")}if(!/^\d{5}(-\d{4})?(?!-)$/.test(c.address[0].zip)){throw new Error("Zip code should be numeric [5]")}if(c.phone&&!/^[0-9]+$/.test(c.phone)){throw new Error("Phone number should be numeric")}}else{throw new Error("* marked fields are mandatory!")}}else{throw new Error("User handle not found. Refresh and try again!")}};return a});models.factory("$trips",function(){var e=function(l,h,k,g,j,i){this._id=l;this.dest=h;this.start=k;this.end=g;this.comment=j;this.pending=i};var b=function(h,j,g,i){this.keyword=h;this.start=j;this.end=g;this.pending=i};var d=new b();var f={};var a=new Date();var c=[];f.getTrip=function(g){if(g){var k=0;var i=new Date(g.start);var h=new Date(g.end);if(i<a&&h>=a){k="plane"}else{if(i<a&&h<a){k="ok"}else{k=i-a;k=Math.round(k/1000/60/60/24);if(k==0){k="briefcase"}}}return new e(g._id,g.dest,i.toDateString(),h.toDateString(),g.comment,k)}else{var j=new e(null,null,null,null,null,null);delete j._id;return j}};f.getTrips=function(g){c=[];for(var h in g){c.push(f.getTrip(g[h]))}return c};f.getTripById=function(h){for(var g in c){if(c[g]._id==h){return c[g]}}return null};f.removeTripById=function(h){for(var g in c){if(c[g]._id==h){c.splice(g,1);return}}};f.addTrip=function(g){c.push(g)};f.editTrip=function(i,h){for(var g in c){if(c[g]._id==i){c[g]=h;return}}};f.clearTrips=function(){c=[]};f.getTripList=function(){c.sort(function(h,g){return new Date(h.start)-new Date(g.start)});return c};f.searchFilter=function(){return d};f.newFilter=function(){return new b()};f.validate=function(g){if(g){if(g.dest&&g.start&&g.end){if(g.comment&&!/^[A-Za-z0-9\._\-\,\;\:\!\s]+$/.test(g.comment)){throw new Error("Comment should contain no special characters except [_ - . , : ; ! ]")}}else{throw new Error("Destination, start and end date are mandatory!")}}else{throw new Error("Undefined trip! [web client error]")}};return f});var defResponseHandler=function(a){console.log("No response handler specified for this event.\nRESPONSE: "+a)};var Request=function(a,c,b){this.body=a;this.success=(c)?c:defResponseHandler;this.error=(b)?b:defResponseHandler};